---
- hosts: all
  tasks:
  - name: Insert apt proxy
    template:
      src: templates/apt-proxy.conf
      dest: /etc/apt/apt.conf.d/90proxy
      owner: root
      group: root
      mode: 0644

  - name: Upgrade everything
    apt: upgrade=dist update_cache=true
    tags:
      - deployer_bootstrap

  - name: Install base packages
    apt: name={{item}} state=installed
    notify: restart ntpd
    with_items:
      - bridge-utils
      - debootstrap
      - ifenslave
      - ifenslave-2.6
      - lsof
      - lvm2
      - ntp
      - ntpdate
      - openssh-server
      - sudo
      - tcpdump
      - vlan
      - python
      - vim

  - name: Add modules
    lineinfile:
      path: /etc/modules
      line: '8021q'
      state: present

  - name: Remove cloud-init networking
    file:
      path: /etc/network/interfaces.d/50-cloud-init.cfg
      state: absent

  - stat: path=/etc/nologin
    register: cloudinitdisabled

  - name: Disable cloud-init
    file:
      path: /etc/cloud/cloud-init.disabled
      state: touch
    when: cloudinitdisabled.stat.exists is defined and not cloudinitdisabled.stat.exists

  - name: Fix dhclient conf file
    template:
      src: templates/dhclient.conf
      dest: /etc/dhcp/dhclient.conf
      owner: root
      group: root
      mode: 0644

  - name: Remove noexec from tmpfs mount options
    replace:
        path: /etc/fstab
        regexp: '(^tmpfs.*)noexec,(.*)'
        replace: '#\1#\2'
    notify: remount tmpfs


  handlers:
    - name: restart ntpd
      service: name=ntp state=restarted

    - name: restart tinyproxy
      service: name=tinyproxy state=restarted

    - name: remount tmpfs
      shell:  'mount -o remount /tmp'

- hosts: deployer
  tasks:
  - name: Configure mgmt bridge
    template:
      src: templates/br-mgmt-deployer
      dest: /etc/network/interfaces.d/br-mgmt.cfg
      owner: root
      group: root
      mode: 0644

  - name: Install tinyproxy
    apt: name=tinyproxy state=installed
    tags:
      - deployer_bootstrap

  - name: Stop tinyproxy
    service: name=tinyproxy state=stopped enabled=yes
    tags:
      - deployer_bootstrap

  - name: Configure tinyproxy
    lineinfile:
      path: /etc/tinyproxy.conf
      insertafter: "{{ item.insertafter }}"
      line: "{{ item.line }}"
      state: present
    notify: start tinyproxy
    tags:
      - deployer_bootstrap
    with_items:
        - { line: "Listen {{ inventory_hostname }}", insertafter: '#Listen' }
        - { line: 'Allow 192.168.0.0/16', insertafter: 'Allow 127.0.0.1' }
  handlers:
    - name: start tinyproxy
      service: name=tinyproxy state=started

- hosts: osds
  tasks:
  - name: Configure OSD networks
    template:
      src: templates/br-{{item}}
      dest: /etc/network/interfaces.d/br-{{item}}.cfg
      owner: root
      group: root
      mode: 0644
    with_items:
      - mgmt
      - storage
      - repl

  - name: Comment out old networks
    replace:
      path: "/etc/network/interfaces.d/ens{{ item }}.cfg"
      regexp: '^(?!#)(.*)'
      replace: '#\1'
    with_sequence: start=3 end=5

- hosts: controllers
  tasks:
  - name: Configure controller networks
    template:
      src: templates/br-{{item}}
      dest: /etc/network/interfaces.d/br-{{item}}.cfg
      owner: root
      group: root
      mode: 0644
    with_items:
      - mgmt
      - storage
      - vlan
      - vxlan

  - name: Comment out old networks
    replace:
      path: "/etc/network/interfaces.d/ens{{ item }}.cfg"
      regexp: '^(?!#)(.*)'
      replace: '#\1'
    with_sequence: start=3 end=6

- hosts: computes
  tasks:
  - name: Configure compute networks
    template:
      src: templates/br-{{item}}
      dest: /etc/network/interfaces.d/br-{{item}}.cfg
      owner: root
      group: root
      mode: 0644
    with_items:
      - mgmt
      - storage
      - vlan
      - vxlan

  - name: Comment out old networks
    replace:
      path: "/etc/network/interfaces.d/ens{{ item }}.cfg"
      regexp: '^(?!#)(.*)'
      replace: '#\1'
    with_sequence: start=3 end=6

